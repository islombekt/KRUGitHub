@model KRU.Models.FinanceReport

@{
    ViewData["Title"] = "Create";
}
<div class="card box-shadow card-simple-form card-small">
    <h1>Яратиш</h1>

    <h4>Текширув ҳисоботи</h4>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <form novalidate class="kru multiple-categories" id="app" asp-action="Create">
                <div class="kru-form-container-small">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="StartDate" class="control-label">Бошланиш санаси</label>
                        <input asp-for="StartDate" class="form-control" />
                        @*<span asp-validation-for="StartDate" class="text-danger"></span>*@
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EndDate" class="control-label">Тугаш санаси</label>
                        <input asp-for="EndDate" class="form-control" />
                        @*<span asp-validation-for="EndDate" class="text-danger"></span>*@
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Ҳолат</label>
                        <select asp-for="Status" class="form-control">
                            <option selected></option>
                            <option value="8">На работе</option>
                            <option value="7">День до праздника (7)</option>
                            <option value="К">Командировка</option>
                            <option value="Уд">Удаленка</option>
                        </select>
                        @*<span asp-validation-for="Status" class="text-danger"></span>*@
                        <span class="invalid-feedback"></span>
                    </div>
                    

                    <div class="form-group">
                        <label asp-for="AddressId" class="control-label">Адрес</label>
                        <select asp-for="AddressId" id="address" class="select2 form-control" asp-items="ViewBag.AddressId"></select>
                    </div>
                    <div id="object" class="form-group" style="display: none;">
                        <label asp-for="ObjectId" class="control-label">Объект</label>
                        <select asp-for="ObjectId" id="object1" class="select2 form-control" asp-items="ViewBag.ObjectId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="TaskId" class="control-label">Вазифа</label>
                        <select asp-for="TaskId" class="select2 form-control" asp-items="ViewBag.TaskId"></select>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="CheckPeriod" class="control-label">Муддат</label>
                        <input asp-for="CheckPeriod" class="form-control" />
                        @*<span asp-validation-for="FinComment" class="text-danger"></span>*@
                        <span class="invalid-feedback"></span>
                    </div>
                    <div id="new-container" class="new-container d-none">
                        <div class="form-group">
                            <label asp-for="amount" class="control-label dynamic">Жами суммаси</label>
                            <input asp-for="amount" class="form-control" />
                            @*<span asp-validation-for="amount" class="text-danger"></span>*@
                            <span class="invalid-feedback"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Category1Id" class="control-label dynamic">Категория х</label>
                            <select asp-for="Category1Id" id="Cate" class="form-control cate" asp-items="ViewBag.Category1Id"></select>
                        </div>
                        <div id="category" class="form-group" style="display:none;">
                            <label asp-for="Category11Id" class="control-label dynamic">Категория х.х</label>
                            <select asp-for="Category11Id" id="CCategory1" class="form-control category1" asp-items="ViewBag.Category11Id"></select>
                        </div>
                        <div id="category1" class="form-group" style="display: none;">
                            <label asp-for="Category111Id" class="control-label dynamic">Категория х.х.х</label>
                            <select asp-for="Category111Id" id="CCategory11" class="form-control category11" asp-items="ViewBag.Category111Id"></select>
                        </div>
                        <div class="form-group">
                            <label asp-for="FinComment" class="control-label">Изоҳ</label>
                            <input asp-for="FinComment" class="form-control" />
                            @*<span asp-validation-for="FinComment" class="text-danger"></span>*@
                        <span class="invalid-feedback"></span>
                    </div>
                </div> 
                    <div class="buttons-container d-flex justify-content-center">
                        <a id="addCategory" class="btn btn-default"><i class="fas fa-plus mr-2"></i>Ҳисобот қошиш </a>
                    </div>
                </div>
                
                
                <div class="form-button-container">
                    <a class="btn btn-outline-primary mr-3 no-outline" asp-action="Index">
                        <i class="fas fa-arrow-left mr-2"></i>Ортга қайтиш
                    </a>
                    <button id="submitcat" type="submit" name="submitcat" value="Submit" asp-action="CreateAfterCat" hidden></button>
                    <button id="submitcat1" type="submit" name="submitcat1" value="Submit" asp-action="CreateAfterCat1" hidden></button>
                    <button id="submit" type="submit" name="submit" value="Submit" asp-action="CreateAfterAddress" hidden></button>
                    <input type="submit" value="Яратиш" class="btn btn-primary submit-form" />
                </div> 
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    jQuery(document).ready(function ($) {
        // hide all optional elements
        $('#category').hide();
        $('#category1').hide();
        $("#Cate").each(function () {
            if ($('#CCategory1').val() === "" || $('#CCategory1').val() === null) {
                $('#category').filter(':hidden');
            }

            else
                $('#category').slideDown();
        });
        $("#CCategory1").each(function () {
            if ($('#CCategory11').val() === "" || $('#CCategory11').val() === null) {
                $('#category1').filter(':hidden');
            }

            else
                $('#category1').slideDown();
        });


        function category2Generate(selectedElement) {
            const val = selectedElement.val();
            $.ajax({
                     type: "GET",
                     url: "GetCat2",
                     data: {catId1: val},
                     success: function(result, status, xhr) {
                         const cat2El = selectedElement.closest(".new-container").find(".category1");
                         cat2El.empty();
                         result.forEach((item) => {
                             cat2El.append($("<option></option>").attr("value", item.category11Id).text(item.name_C11));
                         });
                        category3Generate(cat2El);
                     },
                     error: function(xhr, status, error) {
                         console.log(error);
                     }
                 });
        }

        function category3Generate(selectedElement) {
            const val = selectedElement.val();
            $.ajax({
                     type: "GET",
                     url: "GetCat3",
                     data: {catId2: val},
                     success: function(result, status, xhr) {
                         const cat3El = selectedElement.closest(".new-container").find(".category11");
                         cat3El.empty();
                         result.forEach((item) => {
                             cat3El.append($("<option></option>").attr("value", item.category111Id).text(item.name_C111));
                         });
                     },
                     error: function(xhr, status, error) {
                         console.log(error);
                     }
                 });
        }

        function objsGenerate(selectedElement) {
            const val = selectedElement.val();
            $.ajax({
                     type: "GET",
                     url: "GetObject",
                     data: {addressId: val},
                     success: function(result, status, xhr) {
                         const objEl = $("#object");
                         if(result.length > 0) {
                             objEl.css("display", "block");
                             const objSelect = objEl.find("select");
                             objSelect.empty();
                             result.forEach((item) => {
                                objSelect.append($("<option></option>").attr("value", item.objectId).text(item.objectName));
                            });
                         }
                         else objEl.css("display", "none");
                     },
                     error: function(xhr, status, error) {
                         console.log(error);
                     }
                 });
        }

        let globCounter = 0;
        $("#address").change(function(){
            objsGenerate($(this));
        });
        $("#address").ready(function(){
            objsGenerate($(this));
        });

        function createInputs(lastEl) {
            const inputs = ['<label asp-for="amount" class="control-label">Жами суммаси</label><input name="amount" asp-for="amount" class="form-control" />',
                            '<label asp-for="Category1Id" class="control-label">Категория х</label><select name="Category1Id" asp-for="Category1Id" id="Cate" onchange="javascript: $(\'#submitcat\').click();" class="select2 form-control" asp-items="ViewBag.Category1Id"><option>1</option><option>2</option></select>',
                            '<label asp-for="Category11Id" class="control-label">Категория х.х</label><select name="Category11Id" asp-for="Category11Id" id="CCategory1" onchange="javascript: $(\'#submitcat1\').click();" class="select2 form-control" asp-items="ViewBag.Category11Id"><option>1</option><option>2</option></select>',
                            '<label asp-for="Category111Id" class="control-label">Категория х.х.х</label><select name="Category111Id" asp-for="Category111Id" id="CCategory11" class="select2 form-control" asp-items="ViewBag.Category111Id"><option>1</option><option>2</option></select>'];

            let container = $('<div/>', {'class': 'new-container'});
            
            inputs.forEach((item) => {
                let formGroup = $('<div/>', {'class': 'form-group'});
                formGroup.append($(item));
                formGroup.append($('<span class="invalid-feedback"></span>'));
                container.append(formGroup);
            });
            container.insertBefore(lastEl);
        }

        function changeAttr(el, attrName){
            const curAttr = $(el).attr(attrName);
            if(curAttr) $(el).attr(attrName, curAttr + "-" + globCounter.toString());
        }

        function changeElAttr(blocks){
            Array.from(blocks).forEach((block) => {
                changeAttr(block, "id");
                Array.from($(block).children()).forEach((child) => {
                    changeAttr(child, "id");
                    changeAttr(child, "name");
                    if($(child).prop("tagName") === "SELECT") $(child).addClass("select2");
                });
            });
        }

        function copyInputs(lastEl) {
            const container = $("<div/>", {class: "big-container"});

            const elToCopy = $(".new-container").first().clone();
            changeElAttr($(elToCopy).children());
            $(elToCopy).removeClass("d-none");
            $(elToCopy).addClass("collapse show");
            changeAttr(elToCopy, "id");

            const linkContainer = $("<div/>", {class: "link-container"});
            $(linkContainer).append($("<a/>", {text: `${globCounter + 1}`,href: "#" + $(elToCopy).attr("id"), "class": "title", "data-toggle": "collapse"}));
            $(linkContainer).append($("<a/>", {'class': 'close-btn'}).append($('<i class="fas fa-times"></i>')));

            $(container).append(linkContainer);
            $(container).append(elToCopy);

            $(container).insertBefore(lastEl);

            $(".big-container a.close-btn").unbind("click").click(function(){
                const parent = $(this).closest(".big-container");

                let idx = parent.find(".new-container").attr("id").match(/-[0-9](?!.*[0-9])/);
                if(idx){
                    idx = idx[0].slice(1);
                    idx = parseInt(idx);
                
                    for(let i = idx + 1; i < globCounter; i++){                        
                        $(`.new-container input[name="amount-${i}"]`).attr("name", `amount-${i - 1}`).attr("id", `amount-${i - 1}`);
                        $(`.new-container select[name="Category1Id-${i}"]`).attr("name", `Category1Id-${i - 1}`).attr("id", `Category1Id-${i - 1}`);
                        $(`.new-container select[name="Category11Id-${i}"]`).attr("name", `Category11Id-${i - 1}`).attr("id", `Category11Id-${i - 1}`);
                        $(`.new-container select[name="Category111Id-${i}"]`).attr("name", `Category111Id-${i - 1}`).attr("id", `Category111Id-${i - 1}`);
                        $(`.new-container input[name="FinComment-${i}"]`).attr("name", `FinComment-${i - 1}`).attr("id", `FinComment-${i - 1}`);
                        
                        $(`#new-container-${i}`).closest('.big-container').find('a.title').text(`${i}`).attr("href", `#new-container-${i - 1}`);
                        $(`#new-container-${i}`).attr("id", `new-container-${i - 1}`);
                    }
                    parent.remove();
                    globCounter--;
                }
                
            });

            $(".select2").select2();
            const amountObj = $("#amount-" + globCounter.toString());
            if (amountObj && amountObj.length > 0) {
                formatAmount(amountObj);
                amountObj.on("input", function () {
                    if (isNumberInput($(this).val())) formatAmount($(this));
                });
            }

            $(".cate").change(function(){
                category2Generate($(this));
            });

            $(".category1").change(function(){
                category3Generate($(this));
            });

            globCounter++;
        }

        $("#addCategory").click(function(){
            const lastEl = $(this).closest(".buttons-container");
            if(lastEl.length > 0) copyInputs(lastEl[0]);
        });

        $(".submit-form").click(function(e){
            e.preventDefault();

            const staticFields = ["AddressId", "ObjectId", "CheckPeriod", "EndDate", "StartDate", "Status", "TaskId", "__RequestVerificationToken"];
            let finObj = {};
            let category = {};
            for(let i = 0; i < globCounter; i++){
                const iStr = i.toString();
                category[iStr] = {};
            }
            const formArray = $(this).closest("form").length > 0 ? $($(this).closest("form")[0]).serializeArray() : [];
            formArray.forEach((input) => {
                if(staticFields.includes(input.name))
                    finObj[input.name] = input.value;
                else {
                    let idx = input.name.match(/-[0-9](?!.*[0-9])/);
                    // idx = idx ? idx[0].slice(1) : "0";
                    if(idx) {
                        idx = idx[0].slice(1);
                        let objName = input.name.match(/([A-Za-z0-9]+)/);
                        objName = objName ? objName[0] : "0";
                        category[idx][objName] = input.value;
                    }
                   
                }
            });
            
            let catList = [];
            Object.values(category).forEach(val => {
                catList.push(val);
            });

            finObj["category"] = catList;
            console.log(finObj);

            $.ajax({
                type: "POST",
                url: "PostFinance",
                dataType: 'json',
                contentType: 'application/json',
                data: finObj,
                success: function(result, status, xhr) {
                    console.log("Success");
                },
                error: function(xhr, status, error) {
                    console.log("ERROR!");
                    console.log(error);
                }
            });
        });
    });
</script>